{
  "stats": {
    "suites": 5,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-27T09:48:28.261Z",
    "end": "2024-06-27T09:48:28.375Z",
    "duration": 114,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb7a4be4-a691-4c5a-a743-aa373ede6614",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "868ae696-25ac-4adb-bd95-b46584dda750",
          "title": "Usernames API",
          "fullFile": "C:\\Test-API-Prisma\\__tests__\\test.js",
          "file": "\\__tests__\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Usernames API\"",
              "fullTitle": "Usernames API \"before all\" hook in \"Usernames API\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await prisma.username.deleteMany();",
              "err": {},
              "uuid": "8a56893e-5dd1-4df6-a4af-420e479882e8",
              "parentUUID": "868ae696-25ac-4adb-bd95-b46584dda750",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Usernames API\"",
              "fullTitle": "Usernames API \"after all\" hook in \"Usernames API\"",
              "timedOut": false,
              "duration": 9,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await prisma.$disconnect();",
              "err": {},
              "uuid": "914c5a7f-873e-4a00-b7b5-efeb9e873aa3",
              "parentUUID": "868ae696-25ac-4adb-bd95-b46584dda750",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "524b1d93-e109-4de4-811b-0193105c5184",
              "title": "POST /usernames",
              "fullFile": "C:\\Test-API-Prisma\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new username",
                  "fullTitle": "Usernames API POST /usernames should create a new username",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await chai.request(app)\n    .post('/usernames')\n    .send({ username: 'test_user' });\nexpect(res).to.have.status(201);\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('username', 'test_user');\nconst user = await prisma.username.findFirst({\n    where: { username: 'test_user' }\n});\nexpect(user).to.not.be.null;\nexpect(user).to.have.property('username', 'test_user');",
                  "err": {},
                  "uuid": "53caeaef-8510-4710-8b64-ab65497a5453",
                  "parentUUID": "524b1d93-e109-4de4-811b-0193105c5184",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53caeaef-8510-4710-8b64-ab65497a5453"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7d32cc24-9287-4ce5-aa27-c82ef3a7ca61",
              "title": "GET /usernames",
              "fullFile": "C:\\Test-API-Prisma\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get all usernames",
                  "fullTitle": "Usernames API GET /usernames should get all usernames",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await chai.request(app).get('/usernames');\n\nexpect(res).to.have.status(200);\nexpect(res.body).to.be.an('array');\nexpect(res.body.length).to.be.above(0);\nconst users = await prisma.username.findMany();\nexpect(users).to.be.an('array');\nexpect(users.length).to.be.above(0);",
                  "err": {},
                  "uuid": "2e1f46c8-1d0b-4491-acd8-482d11edea87",
                  "parentUUID": "7d32cc24-9287-4ce5-aa27-c82ef3a7ca61",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e1f46c8-1d0b-4491-acd8-482d11edea87"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "991e2722-1c09-4687-a0a7-f3e0fb1a418f",
              "title": "PUT /usernames/:id",
              "fullFile": "C:\\Test-API-Prisma\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"PUT /usernames/:id\"",
                  "fullTitle": "Usernames API PUT /usernames/:id \"before all\" hook in \"PUT /usernames/:id\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = await prisma.username.create({ data: { username: 'old_user' } });\nuserId = user.id;",
                  "err": {},
                  "uuid": "4403f8dd-6805-401d-9f32-6f7d7a39095c",
                  "parentUUID": "991e2722-1c09-4687-a0a7-f3e0fb1a418f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update a username by id",
                  "fullTitle": "Usernames API PUT /usernames/:id should update a username by id",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await chai.request(app)\n    .put(`/usernames/${userId}`)\n    .send({ username: 'updated_user' });\nexpect(res).to.have.status(200);\nconst updatedUser = await prisma.username.findUnique({\n    where: { id: userId }\n});\nexpect(updatedUser).to.have.property('username', 'updated_user');",
                  "err": {},
                  "uuid": "91841e68-24b5-4f3a-ac43-4bf9d1d15e33",
                  "parentUUID": "991e2722-1c09-4687-a0a7-f3e0fb1a418f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91841e68-24b5-4f3a-ac43-4bf9d1d15e33"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "fb433033-bb9f-47ef-acb8-bf259595cfd1",
              "title": "DELETE /usernames/:id",
              "fullFile": "C:\\Test-API-Prisma\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"DELETE /usernames/:id\"",
                  "fullTitle": "Usernames API DELETE /usernames/:id \"before all\" hook in \"DELETE /usernames/:id\"",
                  "timedOut": false,
                  "duration": 5,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = await prisma.username.create({ data: { username: 'delete_user' } });\nuserId = user.id;",
                  "err": {},
                  "uuid": "6c474b62-a1e1-4ec0-a154-ae0ffa863b74",
                  "parentUUID": "fb433033-bb9f-47ef-acb8-bf259595cfd1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a username by id",
                  "fullTitle": "Usernames API DELETE /usernames/:id should delete a username by id",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await chai.request(app).delete(`/usernames/${userId}`);\n\nexpect(res).to.have.status(200);\nconst deletedUser = await prisma.username.findUnique({\n    where: { id: userId }\n});\nexpect(deletedUser).to.be.null;",
                  "err": {},
                  "uuid": "f72fc086-0315-4fe4-afd0-9cd5e84e0130",
                  "parentUUID": "fb433033-bb9f-47ef-acb8-bf259595cfd1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f72fc086-0315-4fe4-afd0-9cd5e84e0130"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}